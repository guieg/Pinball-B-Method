IMPLEMENTATION PinballI
REFINES Pinball
    
CONSTANTS maxjogadores
    
PROPERTIES maxjogadores = 5
    
VALUES nBolas = 5; 
    bumpers = 1..7;
    maxjogadores = 5;
    JOGADOR = 0..4;
    valorMaquina = 5;
    empty = 0;
    jogadores = 1..4;
    bonus = {1 |->  [3,2,4], 2 |->  [1,4,5], 3 |->  [2,1, 4, 7], 4 |->  [3,2,1], 5 |->  [5,2,6], 6 |->  [4,7,1], 7 |->  [5,4,1,2,3]}
    
CONCRETE_VARIABLES
    jogadorAtual, bolasAtuais, pontuacaoAtual, estado, ranking, cartao, records, sequenciaAcertos, indicejogador
    
INVARIANT
    indicejogador : 0..(maxjogadores-1) >-> JOGADOR 
    & jogadorAtual : JOGADOR 
    & bolasAtuais : NAT 
    & pontuacaoAtual : NAT 
    & estado : 0..5  
    & ranking : 0..(maxjogadores-1) >-> 0..(maxjogadores-1)
    & cartao : 0..(maxjogadores-1) --> NAT 
    & records :  0..(maxjogadores-1) --> NAT  
    & sequenciaAcertos : 0..5 +-> NAT
    & !xx.(xx: NAT & xx < size(ranking)-1 & estado=0 => records(ranking(xx)) >= records(ranking(xx+1)))
    
    
INITIALISATION
    jogadorAtual, bolasAtuais, pontuacaoAtual, estado, ranking, cartao, records, sequenciaAcertos, indicejogador := empty, 0, 0, 0, [], jogadores*{0},{}, [], (0..(maxjogadores))*JOGADOR
    
OPERATIONS
    
    adicionarCredito(jj, cc) =
    BEGIN  cartao :=  cartao <+ {indicejogador~(jj) |-> (cc + cartao(indicejogador~(jj)))}
    END ;
    
    transferirCredito(j1, j2, cc) =  
    BEGIN cartao :=  (cartao <+ {indicejogador~(j1) |-> (cartao(indicejogador~(j1)) - cc)}) <+ {indicejogador~(j2) |-> (cc + cartao(indicejogador~(j2)))}
    END ;
    
    iniciarPartida(jj) = 
    BEGIN jogadorAtual := jj;
        bolasAtuais := nBolas; 
        cartao :=  cartao <+ {indicejogador~(jj) |-> (cartao(indicejogador~(jj)) - valorMaquina)}; 
        estado := 1; 
        pontuacaoAtual := 0
    END ;
    
    finalizar = 
    BEGIN jogadorAtual, estado, bolasAtuais, sequenciaAcertos:= empty, 2, 0, []; 
        IF indicejogador~(jogadorAtual) /: dom(records)  THEN 
            records(indicejogador~(jogadorAtual)) := pontuacaoAtual 
        ELSE 
            records(indicejogador~(jogadorAtual)) := max({records(indicejogador~(jogadorAtual)), pontuacaoAtual}) 
        END ;
        IF indicejogador~(jogadorAtual) /: ran(ranking) THEN 
            ranking := ranking  <+ { size(ranking) +1 |-> indicejogador~(jogadorAtual)} 
        ELSE 
            ranking := ranking  <+ { ranking~(indicejogador~(jogadorAtual)) |-> indicejogador~(jogadorAtual)} 
        END
    END;
    
    perderBola = 
    BEGIN  
        bolasAtuais, sequenciaAcertos :=  bolasAtuais -1, []
    END;
    // Adicionar e ordenar o ranking
    
    pontuar(pp) = 
    BEGIN sequenciaAcertos := sequenciaAcertos <- pp;
        IF size(sequenciaAcertos) >= card(bonus(pp)) THEN 
            IF rev(rev(sequenciaAcertos) /|\ card(bonus(pp))) = bonus(pp) THEN 
                pontuacaoAtual := min({pontuacaoAtual + pp*10 + 100, MAXINT})
            ELSE  pontuacaoAtual := min({pontuacaoAtual + pp*10, MAXINT})  END 
        ELSE  pontuacaoAtual := min({pontuacaoAtual + pp*10, MAXINT}) END
    END;
    
    rk <--  topN(nn)=
    BEGIN 
        VAR ii IN ii := 0;
            rk := 0..(nn-1) * indicejogador(0);
            WHILE ii < nn
            DO   
                rk(ii) := indicejogador(ranking(ii+1));
                ii := ii + 1
            INVARIANT ii : 0..nn & !jj .(jj : 0..(ii-1) => rk(jj) = indicejogador(ranking(jj+1)))
            VARIANT nn - ii
            END
        END
    END ;
    
    rk <-- posicaoRanking(pp)=
    BEGIN 
        VAR ii IN ii := 0;
            WHILE indicejogador(ranking(ii)) /= pp
            DO ii:= ii + 1
            INVARIANT ii < maxjogadores & #i2 .(i2 : ii..(maxjogadores -1) & indicejogador(ranking(i2)) = pp)
            VARIANT maxjogadores -1 - ii
            END;
            rk := ii
        END
    END ;
    
    ordenarRanking = 
    BEGIN 
        VAR ii, tt, sw IN
            ii:=0;
            tt:=ii;
            WHILE ii < maxjogadores
            DO  
                VAR jj IN
                    jj := ii+1;
                    WHILE jj < maxjogadores
                    DO   
                        IF records~(ranking~(tt)) < records~(ranking~(jj)) THEN tt:=jj END;
                        jj:=jj+1
                    INVARIANT jj : (ii+1)..(maxjogadores)
                    VARIANT maxjogadores - jj
                    END;
                    sw := records(ranking~(tt));
                    tt:=records(ranking~(ii));
                    ii:=sw
                END;
                ii:=ii+1
            INVARIANT ii : 0..(maxjogadores) & ! (xx, yy) . (xx : 0..(ii) & yy: 0..(ii) & xx /= yy & xx < yy => records~(ranking~(xx)) > records~(ranking~(yy)) )
            VARIANT maxjogadores - ii
            END
        END;
        estado := 0
    END
    
    
END
