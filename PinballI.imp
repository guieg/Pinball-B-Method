IMPLEMENTATION PinballI
REFINES Pinball
    
CONCRETE_CONSTANTS maxjogadores
    
PROPERTIES maxjogadores : NAT
    
VALUES 
    jogador = 0..7;
    nBolas = 5; 
    bumpers = 1..7;
    maxjogadores = 8;
    valorMaquina = 5;
    empty = 0;
    jogadores = 1..7;
    bonus = {0 |-> 0, 1 |-> 9, 2 |-> 10, 3 |-> 14, 4 |-> 4, 5 |-> 13, 6 |->  12, 7 |-> 15}
    
    
CONCRETE_VARIABLES
    jogadorAtual, bolasAtuais, pontuacaoAtual, estado, rankingi, cartaoi, recordsi, sequenciaAcertosi, fimRanking, fimSequencia
    
INVARIANT
    fimRanking : 0..(maxjogadores)
    & fimSequencia : 0..4 
    & jogadorAtual : jogador
    & bolasAtuais : NAT 
    & pontuacaoAtual : NAT 
    & estado : 0..5  
    & rankingi : jogador --> jogador
    & cartaoi : jogador --> NAT 
    & recordsi :  jogador --> NAT  
    & sequenciaAcertosi : (0..3) --> NAT
    
    & !xx.(xx: 0..(fimRanking - 1) => rankingi(xx) = ranking(xx+1))
    & card(ran(ranking)) = fimRanking
    & fimSequencia <= size(sequenciaAcertos)
    & !xx.(xx: 0..(fimSequencia - 1) => sequenciaAcertosi(xx) = rev(rev(sequenciaAcertos) /|\ fimSequencia)(xx+1))
    
    
    
INITIALISATION
    jogadorAtual := empty; 
    bolasAtuais := 0; 
    pontuacaoAtual:= 0; 
    estado := 0;  
    cartaoi := jogador * {0}; 
    recordsi := jogador * {0};
    sequenciaAcertosi:= (0..3) * {0};
    fimRanking :=0;
    fimSequencia := 0;
    rankingi := jogador * {0}
    
    
OPERATIONS
    
    adicionarCredito(jj, cc) =
    BEGIN  cartaoi(jj) := cc + cartaoi(jj)
    END ;
    
    
    transferirCredito(j1, j2, cc) =  
    BEGIN cartaoi(j1) := cartaoi(j1) - cc;
        cartaoi(j2) := cartaoi(j2) + cc
    END ;
    
    iniciarPartida(jj) = 
    BEGIN jogadorAtual := jj;
        bolasAtuais := nBolas; 
        cartaoi(jj):= cartaoi(jj) - valorMaquina; 
        estado := 1; 
        pontuacaoAtual := 0
    END ;
    
    pontuar(pp) = 
    BEGIN
        VAR novaPontuacao IN
            novaPontuacao:= pontuacaoAtual + pp*10;
            IF fimSequencia = 4 THEN 
                VAR xx, ii, valorBonus IN
                    xx:=0;
                    ii:=0;
                    valorBonus := bonus(pp);
                    WHILE ii < 4
                    DO   
                        xx := xx + sequenciaAcertosi(ii);
                        ii := ii + 1
                    INVARIANT ii : 0..4
                    VARIANT 4 - ii
                    END;
                    
                    IF xx = valorBonus THEN 
                        novaPontuacao:= novaPontuacao + 100
                    END                 
                    
                END;
                VAR ii IN ii := 0;
                    WHILE ii < 3
                    DO   
                        sequenciaAcertosi(ii) := sequenciaAcertosi(ii+1);
                        ii := ii + 1
                    INVARIANT ii : 0..3
                    VARIANT 3 - ii
                    END
                END;
                sequenciaAcertosi(3) := pp
            ELSE
                sequenciaAcertosi(fimSequencia) := pp; fimSequencia := fimSequencia +1    
            END;
            IF novaPontuacao < MAXINT 
            THEN  
                pontuacaoAtual := novaPontuacao
            ELSE  pontuacaoAtual := MAXINT
            END
        END
    END;
    
    
    finalizar = 
    BEGIN
        estado := 2;
        bolasAtuais := 0;
        fimSequencia := 0;
        
        
        VAR ii, kk IN ii := 0; kk := rankingi(ii);
            WHILE (ii < fimRanking & kk /= jogadorAtual)
            DO 
                ii:= ii + 1; 
                IF ii < fimRanking THEN kk := rankingi(ii) END
            INVARIANT ii : 0..fimRanking & !i2 .(i2 : 0..(ii -1) => rankingi(i2) /= jogadorAtual)
            VARIANT fimRanking - ii
            END;
            
            IF ii = fimRanking THEN 
                rankingi(fimRanking) := jogadorAtual; fimRanking := fimRanking + 1
            END
        END;
        
        VAR ii IN ii:= recordsi(jogadorAtual);
            IF ii < pontuacaoAtual THEN 
                recordsi(jogadorAtual) := pontuacaoAtual
            END
        END;
        jogadorAtual:= empty
    END;
    
    perderBola = 
    BEGIN  
        bolasAtuais:= bolasAtuais -1; 
        fimSequencia := 0
    END;
    
    rk <-- posicaoRanking(pp)=
    BEGIN 
        VAR ii,kk IN ii := 0; kk := rankingi(ii);
            WHILE kk /= pp
            DO ii:= ii + 1; kk := rankingi(ii)
            INVARIANT ii < maxjogadores & #i2 .(i2 : ii..(maxjogadores -1) & rankingi(i2) = pp)
            VARIANT maxjogadores -1 - ii
            END;
            rk := ii
        END
    END;
    
    ordenarRanking = 
    BEGIN 
        VAR ii, tt, sw, pontuacaott IN
            ii:=0;
            tt:=ii;
            sw:=0;
            pontuacaott := 0;
            WHILE ii < maxjogadores
            DO  
                VAR jj, pontuacaojj IN
                    jj := ii+1;
                    pontuacaojj := 0;
                    WHILE jj < maxjogadores
                    DO  
                        pontuacaojj := recordsi(rankingi(jj));
                        pontuacaott := recordsi(rankingi(tt));
                        IF pontuacaott < pontuacaojj THEN tt:=jj END;
                        jj:=jj+1
                    INVARIANT jj : (ii+1)..(maxjogadores)
                    VARIANT maxjogadores - jj
                    END;
                    sw := rankingi(tt);
                    rankingi(tt) := rankingi(jj);
                    rankingi(jj) := sw
                END;
                ii:=ii+1
            INVARIANT ii : 0..(maxjogadores) & ! (xx, yy) . (xx : 0..(ii) & yy: 0..(ii) & xx /= yy & xx < yy => records~(ranking~(xx)) > records~(ranking~(yy)) )
            VARIANT maxjogadores - ii
            END
        END;
        estado := 0
    END
END