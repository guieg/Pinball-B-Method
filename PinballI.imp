IMPLEMENTATION PinballI
REFINES Pinball
    
CONSTANTS maxjogadores
    
PROPERTIES maxjogadores = 5
    
VALUES nBolas = 5; 
    bumpers = 1..7;
    maxjogadores = 5;
    JOGADOR = 0..4;
    valorMaquina = 5;
    empty = 0;
    jogadores = 1..4;
    bonus = {0 |->  [3], 1 |->  [3,2,4], 2 |->  [1,4,5], 3 |->  [2,1, 4, 7], 4 |->  [3,2,1], 5 |->  [5,2,6], 6 |->  [4,7,1], 7 |->  [5,4,1,2,3]}
    
CONCRETE_VARIABLES
    jogadorAtual, bolasAtuais, pontuacaoAtual, estado, ranking, cartao, records, sequenciaAcertos, fimRanking, fimSequencia
    
INVARIANT
    fimRanking : 0..(maxjogadores)
    & fimSequencia : 0..6 
    & jogadorAtual : JOGADOR 
    & bolasAtuais : NAT 
    & pontuacaoAtual : NAT 
    & estado : 0..5  
    & ranking : 0..(maxjogadores-1) --> 0..(maxjogadores-1)
    & cartao : 0..(maxjogadores-1) --> NAT 
    & records :  0..(maxjogadores-1) --> NAT  
    & sequenciaAcertos : 0..5 --> NAT
    & !xx.(xx: NAT & xx < size(ranking)-1 & estado=0 => records(ranking(xx)) >= records(ranking(xx+1)))
    
    
INITIALISATION
    jogadorAtual := empty; 
    bolasAtuais := 0; 
    pontuacaoAtual:= 0; 
    estado := 0;  
    cartao := (0..(maxjogadores-1)) * {0}; 
    records := (0..(maxjogadores-1)) * {0};
    sequenciaAcertos:= (0..(maxjogadores-1)) * {0};
    fimRanking :=0;
    fimSequencia := 0;
    VAR ii IN ii := 0;
        ranking := (0..(maxjogadores-1)) * {0};
        WHILE ii < maxjogadores
        DO   
            ranking(ii) := ranking(ii+1);
            ii := ii + 1
        INVARIANT ii : 0..maxjogadores & !jj .(jj : 0..(ii-1) => jj = ranking(jj))
        VARIANT maxjogadores - ii
        END
    END
    
OPERATIONS
    
    adicionarCredito(jj, cc) =
    BEGIN  cartao(jj) := cc + cartao(jj)
    END ;
    
    transferirCredito(j1, j2, cc) =  
    BEGIN cartao(j1) := cartao(j1) - cc;
          cartao(j2) := cartao(j2) + cc
    END ;
    
    iniciarPartida(jj) = 
    BEGIN jogadorAtual := jj;
        bolasAtuais := nBolas; 
        cartao(jj):= cartao(jj) - valorMaquina; 
        estado := 1; 
        pontuacaoAtual := 0
    END ;
    
    finalizar = 
    BEGIN 
        jogadorAtual:= empty;
        estado := 2;
        bolasAtuais := 0;
        fimSequencia := 0;
        records(jogadorAtual) := max({records(jogadorAtual), pontuacaoAtual});
        IF jogadorAtual /: ran(ranking) THEN 
            ranking(size(ranking) +1) := jogadorAtual
        ELSE 
            ranking := ranking  <+ { ranking~(jogadorAtual) |-> jogadorAtual} 
        END
    END;
    
    perderBola = 
    BEGIN  
        bolasAtuais:= bolasAtuais -1; 
        fimSequencia := 0
    END;
    // Adicionar e ordenar o ranking
    
    pontuar(pp) = 
    BEGIN         
        IF fimSequencia >= card(bonus(pp)) THEN 
            IF (sequenciaAcertos \|/ (fimSequencia - card(bonus(pp)))) = bonus(pp) THEN 
                pontuacaoAtual := min({pontuacaoAtual + pp*10 + 100, MAXINT})
            ELSE  pontuacaoAtual := min({pontuacaoAtual + pp*10, MAXINT})  END 
        ELSE  pontuacaoAtual := min({pontuacaoAtual + pp*10, MAXINT}) END;
        
        IF fimSequencia < 6 
        THEN sequenciaAcertos(fimSequencia) := pp; fimSequencia := fimSequencia +1
        ELSE 
            VAR ii IN ii := 0;
            WHILE ii < 4
            DO   
                sequenciaAcertos(ii) := sequenciaAcertos(ii+1);
                ii := ii + 1
            INVARIANT ii : 0..4
            VARIANT 4 - ii
            END
        END;
        sequenciaAcertos(5) := pp
        END
    END;
    
    rk <--  topN(nn)=
    BEGIN 
        VAR ii IN ii := 0;
            rk := (0..(nn-1)) * {0};
            WHILE ii < nn
            DO   
                rk(ii) := ranking(ii+1);
                ii := ii + 1
            INVARIANT ii : 0..nn & !jj .(jj : 0..(ii-1) => rk(jj) = ranking(jj+1))
            VARIANT nn - ii
            END
        END
    END ;
    
    rk <-- posicaoRanking(pp)=
    BEGIN 
        VAR ii IN ii := 0;
            WHILE ranking(ii) /= pp
            DO ii:= ii + 1
            INVARIANT ii < maxjogadores & #i2 .(i2 : ii..(maxjogadores -1) & ranking(i2) = pp)
            VARIANT maxjogadores -1 - ii
            END;
            rk := ii
        END
    END ;
    
    ordenarRanking = 
    BEGIN 
        VAR ii, tt, sw IN
            ii:=0;
            tt:=ii;
            sw:=0;
            WHILE ii < maxjogadores
            DO  
                VAR jj IN
                    jj := ii+1;
                    WHILE jj < maxjogadores
                    DO   
                        IF records~(ranking~(tt)) < records~(ranking~(jj)) THEN tt:=jj END;
                        jj:=jj+1
                    INVARIANT jj : (ii+1)..(maxjogadores)
                    VARIANT maxjogadores - jj
                    END;
                    sw := records(ranking~(tt));
                    tt:=records(ranking~(ii));
                    ii:=sw
                END;
                ii:=ii+1
            INVARIANT ii : 0..(maxjogadores) & ! (xx, yy) . (xx : 0..(ii) & yy: 0..(ii) & xx /= yy & xx < yy => records~(ranking~(xx)) > records~(ranking~(yy)) )
            VARIANT maxjogadores - ii
            END
        END;
        estado := 0
    END
    
    
END